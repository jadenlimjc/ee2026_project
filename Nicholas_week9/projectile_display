`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 10.10.2024 17:42:49
// Design Name: 
// Module Name: projectile_display
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module projectile_display(input [7:0] projx, input [6:0] projy, input [12:0] pixel_index, input [7:0] opp_tankx,
 input [6:0] opp_tanky, input hit, output reg [15:0] pixel_data, output reg led);
 wire [7:0] curr_x;
 wire [6:0] curr_y;
 assign curr_x = pixel_index % 96;
 assign curr_y = pixel_index / 96;
 parameter green = 16'h07E0;
 parameter black = 16'h0000;
 parameter blue = 16'h4A18;
 parameter TANK_WIDTH = 3;
 parameter TANK_HEIGHT = 3;
always @(pixel_index)
begin
    if (curr_x >= opp_tankx && curr_x  < opp_tankx + TANK_WIDTH  && curr_y >= opp_tanky && curr_y < opp_tanky + TANK_HEIGHT)
        begin
        pixel_data <= blue; //facing up
        end
    else if (!hit && curr_x >= projx -1 && curr_x <= projx + 1  && curr_y == projy-1) //too darn small
        begin
        pixel_data <= green;
        led <= 1;
        end
    else
        begin
        pixel_data <= black;
        led <= 0;
        end
end
endmodule
